<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0420.1112                               -->
<workbook original-version='18.1' source-build='2021.1.1 (20211.21.0420.1112)' source-platform='win' version='18.1' xml:base='https://public.tableau.com' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelExtractV2.true...ObjectModelExtractV2 />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <repository-location id='Powderhounds_Data_Visualizations' path='/workbooks' revision='1.3' />
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='user_info (dajiaraierf0ld)' inline='true' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='ec2-54-163-97-228.compute-1.amazonaws.com' name='postgres.044yzy31q7qwps1h41whs19wywuq'>
            <connection authentication='username-password' class='postgres' dbname='dajiaraierf0ld' one-time-sql='' port='5432' server='ec2-54-163-97-228.compute-1.amazonaws.com' username='mnaxahwxxlsupb' workgroup-auth-mode='as-is' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='postgres.044yzy31q7qwps1h41whs19wywuq' name='user_info' table='[public].[user_info]' type='table' />
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation connection='postgres.044yzy31q7qwps1h41whs19wywuq' name='user_info' table='[public].[user_info]' type='table' />
        <refresh increment-key='' incremental-updates='false' />
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>id</remote-name>
            <remote-type>3</remote-type>
            <local-name>[id]</local-name>
            <parent-name>[user_info]</parent-name>
            <remote-alias>id</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <precision>10</precision>
            <contains-null>false</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>utc_now</remote-name>
            <remote-type>129</remote-type>
            <local-name>[utc_now]</local-name>
            <parent-name>[user_info]</parent-name>
            <remote-alias>utc_now</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>input_date</remote-name>
            <remote-type>129</remote-type>
            <local-name>[input_date]</local-name>
            <parent-name>[user_info]</parent-name>
            <remote-alias>input_date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[user_info]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>dream</remote-name>
            <remote-type>129</remote-type>
            <local-name>[dream]</local-name>
            <parent-name>[user_info]</parent-name>
            <remote-alias>dream</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>planned</remote-name>
            <remote-type>129</remote-type>
            <local-name>[planned]</local-name>
            <parent-name>[user_info]</parent-name>
            <remote-alias>planned</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>activity</remote-name>
            <remote-type>129</remote-type>
            <local-name>[activity]</local-name>
            <parent-name>[user_info]</parent-name>
            <remote-alias>activity</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <width>2147483647</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <attributes>
              <attribute datatype='string' name='TypeIsVarchar'>&quot;true&quot;</attribute>
            </attributes>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[Activity (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[activity]' new-bin='true'>
          <bin default-name='false' value='&quot; Snowboarding&quot;'>
            <value>&quot;snowboarding&quot;</value>
            <value>&quot;Snowboarding&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Backcountry skiing&quot;'>
            <value>&quot;backcountry skiing&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hiking&quot;'>
            <value>&quot;hiking&quot;</value>
            <value>&quot;Hiking&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Skiing &quot;'>
            <value>&quot;Skiing&quot;</value>
            <value>&quot;Skiing &quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Snowblading&quot;'>
            <value>&quot;Snowblades &quot;</value>
            <value>&quot;Snowblading&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Activity (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[activity]' new-bin='true'>
          <bin default-name='false' value='&quot;Backcountry skiing&quot;'>
            <value>&quot;backcountry&quot;</value>
            <value>&quot;Backcountry&quot;</value>
            <value>&quot;backcountry skiing&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Hiking&quot;'>
            <value>&quot;hiking&quot;</value>
            <value>&quot;Hiking&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Skiing &quot;'>
            <value>&quot;Skiing&quot;</value>
            <value>&quot;Skiing &quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Snowblading&quot;'>
            <value>&quot;Snowblades &quot;</value>
            <value>&quot;Snowblading&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Snowboarding&quot;'>
            <value>&quot;snowboarding&quot;</value>
            <value>&quot;Snowboarding&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Dream (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[dream]' new-bin='true'>
          <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
            <value>&quot;Steamboat&quot;</value>
            <value>&quot;Steamboat &quot;</value>
            <value>&quot;Steamboat Springs&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Dream (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[dream]' new-bin='true'>
          <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
            <value>&quot;Steamboat&quot;</value>
            <value>&quot;Steamboat &quot;</value>
            <value>&quot;Steamboat Springs&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Dream (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[dream]' new-bin='true'>
          <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
            <value>&quot;Steamboat&quot;</value>
            <value>&quot;Steamboat &quot;</value>
            <value>&quot;Steamboat Springs&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Planned (group) 1]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[planned]' new-bin='true'>
          <bin default-name='false' value='&quot;Ski Cooper&quot;'>
            <value>&quot;Cooper&quot;</value>
            <value>&quot;Ski Cooper&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
            <value>&quot;Steamboat&quot;</value>
            <value>&quot;Steamboat Springs&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vail&quot;'>
            <value>&quot;vail&quot;</value>
            <value>&quot;Vail&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Planned (group) 2]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[planned]' new-bin='true'>
          <bin default-name='false' value='&quot;Copper Mountain&quot;'>
            <value>&quot;Copper&quot;</value>
            <value>&quot;Copper Mountain&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Ski Cooper&quot;'>
            <value>&quot;Cooper&quot;</value>
            <value>&quot;Ski Cooper&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
            <value>&quot;Steamboat&quot;</value>
            <value>&quot;Steamboat Springs&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vail&quot;'>
            <value>&quot;vail&quot;</value>
            <value>&quot;Vail&quot;</value>
          </bin>
        </calculation>
      </column>
      <column datatype='string' name='[Planned (group)]' role='dimension' type='nominal'>
        <calculation class='categorical-bin' column='[planned]' new-bin='true'>
          <bin default-name='false' value='&quot;Copper Mountain&quot;'>
            <value>&quot;Copper&quot;</value>
            <value>&quot;Copper Mountain&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Ski Cooper&quot;'>
            <value>&quot;Cooper&quot;</value>
            <value>&quot;Ski Cooper&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
            <value>&quot;Steamboat&quot;</value>
            <value>&quot;Steamboat Springs&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;Vail&quot;'>
            <value>&quot;vail&quot;</value>
            <value>&quot;Vail&quot;</value>
          </bin>
        </calculation>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
      <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
      <column caption='Dream' datatype='string' name='[dream]' role='dimension' type='nominal' />
      <column caption='Id' datatype='integer' name='[id]' role='dimension' type='ordinal' />
      <column caption='Input Date' datatype='string' name='[input_date]' role='dimension' type='nominal' />
      <column caption='Planned' datatype='string' name='[planned]' role='dimension' type='nominal' />
      <column caption='Utc Now' datatype='string' name='[utc_now]' role='dimension' type='nominal' />
      <column caption='Zip Code' datatype='string' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
      <column-instance column='[zip_code]' derivation='Attribute' name='[attr:zip_code:nk]' pivot='key' type='nominal' />
      <column-instance column='[activity]' derivation='None' name='[none:activity:nk]' pivot='key' type='nominal' />
      <column-instance column='[dream]' derivation='None' name='[none:dream:nk]' pivot='key' type='nominal' />
      <column-instance column='[planned]' derivation='None' name='[none:planned:nk]' pivot='key' type='nominal' />
      <column-instance column='[zip_code]' derivation='None' name='[none:zip_code:nk]' pivot='key' type='nominal' />
      <group hidden='true' name='[Exclusions (Activity (group) 1,Planned)]' name-style='unqualified' user:auto-column='exclude'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Activity (group) 1]' />
          <groupfilter function='level-members' level='[none:planned:nk]' />
        </groupfilter>
      </group>
      <extract _.fcp.ObjectModelExtractV2.true...object-id='' count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/carua.DESKTOP-4FTJ629/OneDrive/Desktop/projects/BootCamp Working/Project-3/Snow_Predictor/user_info_data.hyper' default-settings='yes' schema='Extract' sslmode='' tablename='Extract' update-time='05/31/2021 09:46:24 PM' username='tableau_internal_user'>
          <_.fcp.ObjectModelEncapsulateLegacy.false...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <_.fcp.ObjectModelEncapsulateLegacy.true...relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh increment-key='' incremental-updates='false'>
            <refresh-event add-from-file-path='user_info (dajiaraierf0ld)' increment-value='%null%' refresh-type='create' rows-inserted='153' timestamp-start='2021-05-31 21:46:24.273' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>id</remote-alias>
              <ordinal>0</ordinal>
              <family>user_info</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>utc_now</remote-name>
              <remote-type>129</remote-type>
              <local-name>[utc_now]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>utc_now</remote-alias>
              <ordinal>1</ordinal>
              <family>user_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>153</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>input_date</remote-name>
              <remote-type>129</remote-type>
              <local-name>[input_date]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>input_date</remote-alias>
              <ordinal>2</ordinal>
              <family>user_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>zip_code</remote-name>
              <remote-type>129</remote-type>
              <local-name>[zip_code]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>zip_code</remote-alias>
              <ordinal>3</ordinal>
              <family>user_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>80</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>dream</remote-name>
              <remote-type>129</remote-type>
              <local-name>[dream]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>dream</remote-alias>
              <ordinal>4</ordinal>
              <family>user_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>18</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>planned</remote-name>
              <remote-type>129</remote-type>
              <local-name>[planned]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>planned</remote-alias>
              <ordinal>5</ordinal>
              <family>user_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>23</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>activity</remote-name>
              <remote-type>129</remote-type>
              <local-name>[activity]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>activity</remote-alias>
              <ordinal>6</ordinal>
              <family>user_info</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>17</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
              <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[user_info_4436D9E6614C40E496E507DC5B00AEA3]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:dream:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Leadville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Breckenridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steamboat &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monarch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Copper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arapahoe Basin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crested Butte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steamboat Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Telluride&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wolf Creek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ski Cooper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steamboat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaver Creek&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:planned:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Copper Mountain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berthoud Pass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crested Butte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Breckenridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vail&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arapahoe Basin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wolf Creek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steamboat Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monarch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ski Cooper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Telluride&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;vail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eldora&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Copper&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steamboat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keystone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaver Creek&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:zip_code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;14985&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31684&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;64823&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;80482&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;02474&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19713&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;47&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;52417&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;80218&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;13848&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24892&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;56841&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;80352&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;16479&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;34921&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;68465&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;90210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;15481&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;32158&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;67438&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;84635&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;14221&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26586&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;58434&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;80401&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18946&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;43585&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;75040&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;05730&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21894&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;54786&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;80231&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;18512&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;38468&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;75030&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;98621&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;14228&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27496&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;58465&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;80413&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;16516&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35168&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;71650&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;97128&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;16845&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35185&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;73542&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;97504&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18562&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;42695&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;75039&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;98732&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19421&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;46842&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;78213&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;15741&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;32633&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;68461&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;85932&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;14454&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28463&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;60632&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;80442&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12384&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24584&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;55165&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;80302&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;18509&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37561&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;75017&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;97582&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;15792&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34864&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;68463&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;87531&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;13012&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24856&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;56468&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;80320&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Activity (group)]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Skiing in my jeans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Backcountry skiing&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hiking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Snowblading&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Snow bike&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hiking&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Backcountry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowshoeing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skiing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;snowboarding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Snow Tubing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skiing &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;backcountry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Snowmobiling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snowblades &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;backcountry skiing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Planned (group) 2]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Copper Mountain&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Berthoud Pass&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Crested Butte&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Breckenridge&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vail&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arapahoe Basin&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wolf Creek&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Steamboat Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cooper&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Monarch&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ski Cooper&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Telluride&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;vail&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Eldora&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Copper&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Steamboat&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Keystone&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaver Creek&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Dream (group) 2]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Leadville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Breckenridge&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Steamboat &quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Monarch&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Copper&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arapahoe Basin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Winter Park&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Crested Butte&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Steamboat Springs&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Telluride&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Wolf Creek&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ski Cooper&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gunnison&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Aspen&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Vail&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Steamboat&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Beaver Creek&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:zip_code:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;14985&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;31684&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;64823&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;80482&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;02474&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;19713&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;47&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;52417&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;80218&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>%many-values%</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;13848&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;24892&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;56841&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;80352&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;16479&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;34921&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;68465&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;90210&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;15481&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;32158&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;67438&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;84635&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;14221&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;26586&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;58434&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;80401&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;18946&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;43585&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;75040&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;05730&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;21894&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;54786&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;80231&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;18512&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;38468&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;75030&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;98621&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;14228&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;27496&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;58465&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;80413&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;16516&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;35168&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;71650&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;97128&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;16845&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;35185&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;73542&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;97504&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;18562&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;42695&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;75039&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;98732&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;19421&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;46842&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;78213&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;15741&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;32633&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;68461&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;85932&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;14454&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;28463&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;60632&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;80442&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;12384&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;24584&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;55165&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;80302&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;18509&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;37561&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;75017&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;97582&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;15792&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;34864&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;68463&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;87531&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;13012&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;24856&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;56468&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;80320&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:activity:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Skiing in my jeans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hiking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Snowblading&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Snow bike&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hiking&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;backcountry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowshoeing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skiing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;snowboarding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Snow Tubing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skiing &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Backcountry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Snowmobiling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snowblades &quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;backcountry skiing&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Activity (group) 1]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Skiing in my jeans&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;hiking&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Snowblading&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Snow bike&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hiking&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;hiking &amp; Hiking&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;backcountry&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Snowshoeing&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Skiing&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;snowboarding&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Snowboarding&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skiing &amp; Skiing &quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot; Snowboarding&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Snow Tubing&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Skiing &quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Backcountry&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Snowmobiling&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Snowblades &quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Snowblades  &amp; Snowblading&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Backcountry skiing&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='user_info' id='user_info_4436D9E6614C40E496E507DC5B00AEA3'>
            <properties context=''>
              <relation connection='postgres.044yzy31q7qwps1h41whs19wywuq' name='user_info' table='[public].[user_info]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Activities'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Popular Activities</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <column datatype='string' name='[Activity (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[activity]' new-bin='true'>
                <bin default-name='false' value='&quot;Backcountry skiing&quot;'>
                  <value>&quot;backcountry&quot;</value>
                  <value>&quot;Backcountry&quot;</value>
                  <value>&quot;backcountry skiing&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hiking&quot;'>
                  <value>&quot;hiking&quot;</value>
                  <value>&quot;Hiking&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Skiing &quot;'>
                  <value>&quot;Skiing&quot;</value>
                  <value>&quot;Skiing &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Snowblading&quot;'>
                  <value>&quot;Snowblades &quot;</value>
                  <value>&quot;Snowblading&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Snowboarding&quot;'>
                  <value>&quot;snowboarding&quot;</value>
                  <value>&quot;Snowboarding&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Activity (group)]' />
              <groupfilter function='member' level='[Activity (group)]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' />
              <color column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' />
              <text column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1EF8DBCC-0B76-4885-9C5D-233829A5507E}' />
    </worksheet>
    <worksheet name='Activity by Destination'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Activity at Top 10 Destinations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <column datatype='string' name='[Activity (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[activity]' new-bin='true'>
                <bin default-name='false' value='&quot; Snowboarding&quot;'>
                  <value>&quot;snowboarding&quot;</value>
                  <value>&quot;Snowboarding&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Backcountry skiing&quot;'>
                  <value>&quot;backcountry skiing&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Hiking&quot;'>
                  <value>&quot;hiking&quot;</value>
                  <value>&quot;Hiking&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Skiing &quot;'>
                  <value>&quot;Skiing&quot;</value>
                  <value>&quot;Skiing &quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Snowblading&quot;'>
                  <value>&quot;Snowblades &quot;</value>
                  <value>&quot;Snowblading&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column caption='Activity' datatype='string' name='[activity]' role='dimension' type='nominal' />
            <column-instance column='[planned]' derivation='None' name='[none:planned:nk]' pivot='key' type='nominal' />
            <column caption='Planned' datatype='string' name='[planned]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Exclusions (Activity (group) 1,Planned)]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='crossjoin'>
                <groupfilter function='level-members' level='[Activity (group) 1]' />
                <groupfilter function='level-members' level='[none:planned:nk]' />
              </groupfilter>
              <groupfilter function='crossjoin'>
                <groupfilter function='member' level='[Activity (group) 1]' member='&quot;&quot;' />
                <groupfilter function='member' level='[none:planned:nk]' member='&quot;Copper Mountain&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='COUNT([planned])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:planned:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</column>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Exclusions (Activity (group) 1,Planned)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group) 1]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]</rows>
        <cols>([federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk] / [federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group) 1])</cols>
      </table>
      <simple-id uuid='{417B0BE6-D307-4B28-B6F7-CD6E6D750B79}' />
    </worksheet>
    <worksheet name='Dream Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dream Vacation Bar Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <column datatype='string' name='[Dream (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[dream]' new-bin='true'>
                <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
                  <value>&quot;Steamboat&quot;</value>
                  <value>&quot;Steamboat &quot;</value>
                  <value>&quot;Steamboat Springs&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column caption='Dream' datatype='string' name='[dream]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Dream (group)]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Dream (group)]' />
              <groupfilter function='member' level='[Dream (group)]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Dream (group)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Dream (group)]</rows>
        <cols>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]</cols>
      </table>
      <simple-id uuid='{C80ED440-8FDA-4767-983E-F6ABA81AFF18}' />
    </worksheet>
    <worksheet name='Dreamed by ZIP Code'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dream Vacations by ZIP Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <column datatype='string' name='[Dream (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[dream]' new-bin='true'>
                <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
                  <value>&quot;Steamboat&quot;</value>
                  <value>&quot;Steamboat &quot;</value>
                  <value>&quot;Steamboat Springs&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column caption='Dream' datatype='string' name='[dream]' role='dimension' type='nominal' />
            <column-instance column='[planned]' derivation='None' name='[none:planned:nk]' pivot='key' type='nominal' />
            <column-instance column='[zip_code]' derivation='None' name='[none:zip_code:nk]' pivot='key' type='nominal' />
            <column caption='Planned' datatype='string' name='[planned]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='string' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:planned:nk]' />
              <groupfilter function='member' level='[none:planned:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' />
              <lod column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:zip_code:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Dream (group) 1]</rows>
        <cols />
      </table>
      <simple-id uuid='{6B8E4E10-3CFF-455A-814E-3EE562A53D29}' />
    </worksheet>
    <worksheet name='Dreamed vs Planned'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Dream Vacations vs Planned Destinations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <column datatype='string' name='[Dream (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[dream]' new-bin='true'>
                <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
                  <value>&quot;Steamboat&quot;</value>
                  <value>&quot;Steamboat &quot;</value>
                  <value>&quot;Steamboat Springs&quot;</value>
                </bin>
              </calculation>
            </column>
            <column datatype='string' name='[Planned (group) 2]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[planned]' new-bin='true'>
                <bin default-name='false' value='&quot;Copper Mountain&quot;'>
                  <value>&quot;Copper&quot;</value>
                  <value>&quot;Copper Mountain&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ski Cooper&quot;'>
                  <value>&quot;Cooper&quot;</value>
                  <value>&quot;Ski Cooper&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
                  <value>&quot;Steamboat&quot;</value>
                  <value>&quot;Steamboat Springs&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vail&quot;'>
                  <value>&quot;vail&quot;</value>
                  <value>&quot;Vail&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column caption='Dream' datatype='string' name='[dream]' role='dimension' type='nominal' />
            <column-instance column='[planned]' derivation='None' name='[none:planned:nk]' pivot='key' type='nominal' />
            <column caption='Planned' datatype='string' name='[planned]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:planned:nk]' />
              <groupfilter function='member' level='[none:planned:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.1sm3erm0lexqah15gx1ra06mwfu0].[Dream (group) 2] / [federated.1sm3erm0lexqah15gx1ra06mwfu0].[Planned (group) 2])</rows>
        <cols>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]</cols>
      </table>
      <simple-id uuid='{F623B58D-F6C8-4594-B3F1-E0B5DD7DF22C}' />
    </worksheet>
    <worksheet name='Planned Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Planned Vacation Bar Chart</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <column datatype='string' name='[Planned (group)]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[planned]' new-bin='true'>
                <bin default-name='false' value='&quot;Copper Mountain&quot;'>
                  <value>&quot;Copper&quot;</value>
                  <value>&quot;Copper Mountain&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Ski Cooper&quot;'>
                  <value>&quot;Cooper&quot;</value>
                  <value>&quot;Ski Cooper&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
                  <value>&quot;Steamboat&quot;</value>
                  <value>&quot;Steamboat Springs&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vail&quot;'>
                  <value>&quot;vail&quot;</value>
                  <value>&quot;Vail&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[planned]' derivation='None' name='[none:planned:nk]' pivot='key' type='nominal' />
            <column caption='Planned' datatype='string' name='[planned]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:planned:nk]' />
              <groupfilter function='member' level='[none:planned:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Planned (group)]</rows>
        <cols>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]</cols>
      </table>
      <simple-id uuid='{751DAAE0-7B4E-4469-A4F8-656B00FDE960}' />
    </worksheet>
    <worksheet name='Planned by ZIP Code'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Planned Destinations by ZIP Code</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <column datatype='string' name='[Planned (group) 1]' role='dimension' type='nominal'>
              <calculation class='categorical-bin' column='[planned]' new-bin='true'>
                <bin default-name='false' value='&quot;Ski Cooper&quot;'>
                  <value>&quot;Cooper&quot;</value>
                  <value>&quot;Ski Cooper&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Steamboat Springs&quot;'>
                  <value>&quot;Steamboat&quot;</value>
                  <value>&quot;Steamboat Springs&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;Vail&quot;'>
                  <value>&quot;vail&quot;</value>
                  <value>&quot;Vail&quot;</value>
                </bin>
              </calculation>
            </column>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[planned]' derivation='None' name='[none:planned:nk]' pivot='key' type='nominal' />
            <column-instance column='[zip_code]' derivation='None' name='[none:zip_code:nk]' pivot='key' type='nominal' />
            <column caption='Planned' datatype='string' name='[planned]' role='dimension' type='nominal' />
            <column caption='Zip Code' datatype='string' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-manual-selection='true' user:ui-manual-selection-all-when-empty='true' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:planned:nk]' />
              <groupfilter function='member' level='[none:planned:nk]' member='&quot;&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' />
              <lod column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:zip_code:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Planned (group) 1]</rows>
        <cols />
      </table>
      <simple-id uuid='{4493314D-92E7-469A-B442-0E4549C10D9A}' />
    </worksheet>
    <worksheet name='Visitor Home Locations'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Visitor Home Locations</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='user_info (dajiaraierf0ld)' name='federated.1sm3erm0lexqah15gx1ra06mwfu0' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.1sm3erm0lexqah15gx1ra06mwfu0'>
            <_.fcp.ObjectModelTableType.false...column caption='user_info' datatype='integer' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' derivation='Count' name='[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' pivot='key' type='quantitative' />
            <_.fcp.ObjectModelTableType.true...column caption='user_info' datatype='table' name='[__tableau_internal_object_id__].[user_info_4436D9E6614C40E496E507DC5B00AEA3]' role='measure' type='quantitative' />
            <column-instance column='[zip_code]' derivation='None' name='[none:zip_code:nk]' pivot='key' type='nominal' />
            <column caption='Zip Code' datatype='string' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='nominal' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <size column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' />
              <lod column='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:zip_code:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Latitude (generated)]</rows>
        <cols>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1A6C918C-365F-4CD6-85BA-7265C1C3F19E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Activities Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='10' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='13' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='11' w='82400' x='800' y='1000'>
              <zone h='49000' id='9' name='Activities' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='15' name='Activity by Destination' w='82400' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='12' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='14' name='Activities' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='28250' id='16' name='Activity by Destination' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group) 1]' w='16000' x='83200' y='9125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='36' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='35' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='9' is-fixed='true' name='Activities' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='14' name='Activities' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='15' is-fixed='true' name='Activity by Destination' w='82400' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='28250' id='16' name='Activity by Destination' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group) 1]' w='16000' x='83200' y='9125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{55E629F1-753D-4064-87C2-699E41E61ECE}' />
    </dashboard>
    <dashboard name='Destinations by ZIP Code Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='82400' x='800' y='1000'>
              <zone h='98000' id='3' name='Visitor Home Locations' w='82400' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98000' id='6' is-fixed='true' param='vert' w='16000' x='83200' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='15750' id='8' name='Visitor Home Locations' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='16000' x='83200' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='63500' id='9' name='Planned by ZIP Code' w='16000' x='83200' y='16750'>
                <layout-cache fixed-size-h='500' fixed-size-w='153' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='Planned by ZIP Code' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='16000' x='83200' y='80250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='750' minheight='750' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='38' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='37' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='98000' id='3' is-fixed='true' name='Visitor Home Locations' w='82400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='size' _.fcp.SetMembershipControl.true...type-v2='size' h='15750' id='8' name='Visitor Home Locations' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='16000' x='83200' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='63500' id='9' is-fixed='true' name='Planned by ZIP Code' w='16000' x='83200' y='16750'>
                  <layout-cache fixed-size-h='500' fixed-size-w='153' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='Planned by ZIP Code' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='16000' x='83200' y='80250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{FC5C51B5-F4E1-4C3C-8EC6-55660A4F8885}' />
    </dashboard>
    <dashboard name='Dream vs Planned Vacation Dashboard'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='9' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='7' w='65800' x='800' y='1000'>
              <zone h='49000' id='3' name='Dream Bar Chart' w='32900' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='5' name='Planned Bar Chart' w='32900' x='33700' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='6' name='Planned by ZIP Code' w='32900' x='33700' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='49000' id='11' name='Dreamed by ZIP Code' w='32900' x='800' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='326' h='98000' id='8' is-fixed='true' param='vert' w='32600' x='66600' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='Planned by ZIP Code' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='32600' x='66600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='89875' id='14' name='Dreamed vs Planned' w='32600' x='66600' y='9125'>
                <layout-cache fixed-size-h='1647' minwidth='302' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='40' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='39' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='49000' id='3' is-fixed='true' name='Dream Bar Chart' w='32900' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='5' is-fixed='true' name='Planned Bar Chart' w='32900' x='33700' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='89875' id='14' is-fixed='true' name='Dreamed vs Planned' w='32600' x='66600' y='9125'>
                  <layout-cache fixed-size-h='1647' minwidth='302' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='11' is-fixed='true' name='Dreamed by ZIP Code' w='32900' x='800' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49000' id='6' is-fixed='true' name='Planned by ZIP Code' w='32900' x='33700' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='10' name='Planned by ZIP Code' pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' w='32600' x='66600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{4A20C1E2-0171-4955-9A00-80F9C18F7F21}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='dashboard' maximized='true' name='Destinations by ZIP Code Dashboard'>
      <viewpoints>
        <viewpoint name='Planned by ZIP Code' />
        <viewpoint name='Visitor Home Locations'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{835542A1-0184-4F6D-9499-0029659C17B7}' />
    </window>
    <window class='dashboard' name='Dream vs Planned Vacation Dashboard'>
      <viewpoints>
        <viewpoint name='Dream Bar Chart' />
        <viewpoint name='Dreamed by ZIP Code' />
        <viewpoint name='Dreamed vs Planned' />
        <viewpoint name='Planned Bar Chart' />
        <viewpoint name='Planned by ZIP Code' />
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{F8659966-89E5-4791-AFAB-EDAD7E38B781}' />
    </window>
    <window class='dashboard' name='Activities Dashboard'>
      <viewpoints>
        <viewpoint name='Activities' />
        <viewpoint name='Activity by Destination'>
          <zoom type='entire-view' />
          <highlight field='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group) 1]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{2D9AB923-EF86-4580-9000-543B178C8E31}' />
    </window>
    <window class='worksheet' name='Visitor Home Locations'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8CBC6CE0-C4C7-4405-AA9A-F72D5DFBEF34}' />
    </window>
    <window class='worksheet' name='Dream Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:dream:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{128AFFB2-A5CC-447E-A13E-DB7129879B67}' />
    </window>
    <window class='worksheet' name='Planned Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F0BF8E4D-D4B7-4541-9DA1-D5200501660D}' />
    </window>
    <window class='worksheet' name='Planned by ZIP Code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{BAFB23BF-E4D1-4F52-8BE0-F41CCF4F0A32}' />
    </window>
    <window class='worksheet' name='Dreamed by ZIP Code'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:dream:nk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:zip_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06538192-28F6-489B-A48F-3B8D981FB228}' />
    </window>
    <window class='worksheet' name='Dreamed vs Planned'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:dream:nk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:planned:nk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:zip_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{C6C69AA9-3855-43A7-8F89-CAA40AD91293}' />
    </window>
    <window class='worksheet' name='Activities'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[__tableau_internal_object_id__].[cnt:user_info_4436D9E6614C40E496E507DC5B00AEA3:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group)]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:activity:nk]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:zip_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCAA81B4-337E-4BBF-A551-36430E8565B3}' />
    </window>
    <window class='worksheet' name='Activity by Destination'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group) 1]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[Activity (group) 1]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:id:ok]</field>
            <field>[federated.1sm3erm0lexqah15gx1ra06mwfu0].[none:zip_code:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A474CCE1-5FAF-4D14-86BC-A88D1A6AB887}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Activities' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEBElEQVR4nO3Yy24bZRjH4XdiJ3bckCbpgUMD5aSqsIAd4goQl8Z1cAlsWcIKsaJCEKha
      taKlrdQDbZo4ju1hUalqVCNAbWyp/+dZeT5rZt5Z/ORv3LRt2xaEWlr0ALBIAiBa99mDr77+
      tnau3V7ULDB3RwLYuXa7fvzl+qJmgbmzBSJad9bil59/VDvX71S306nh6LAOx5OaTKbV7y1X
      01Tt7h3UvYd7854VXrqZAfx89VadO3OyPtg+Uz9dvlHTaVtt29Z4Mq3+ynJtrA0EwCthZgDL
      naXauXanLl2+WYP+Sj0ejmo6bauaqi8+u1g7170o82qYGcCVm3effn48HB357pvvLh3vRDBH
      XoKJJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgC
      IJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBo
      AiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmA
      aAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJ
      gGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCi
      CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYA
      ogmAaAIgmgCIJgCiCYBoAiBa99mDTz95r06cXl/ULDB3RwJ4cHJQd0ajRc0Cc2cLRLTnAmjb
      tu5f+b0e/fnHzBPatq2Dhw/+8YLDvx7U6PHuy5sQjlF31uJ4uFedXq9u/PB9rby2XuP9vVrd
      OlOjvd1a3TxV96/8Vv2NrZocHNTyibXavXWjVrdOV7ffr/17d2t9+3zdv/xrdVcHdfDoYZ18
      +906cfaNeT8b/KuZW6DOSq/Gw/3afP9CNU3zZLFpaqnTrXYyqe5Kr5rmyantZFz9jc1ae/2t
      6qz0anl1UFVVa29uV7e/WtPDUY0PhvN5GvifnvsFaJqmtj68+PR4cPrscyetb5//TxefTiY1
      Hu7X+rl3XmBEOD4zt0Avy1KnU6cufHyct4AX4l8gogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJ
      gGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCi
      CYBoAiCaAIgmAKIJgGgCIJoAiCYAogmAaAIgmgCIJgCiCYBoAiCaAIgmAKIJgGgCIJoAiCYA
      ogmAaH8DjdGXYbzBIwgAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Activities Dashboard' width='192'>
      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
      J/8fHhig3IEBZtIAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Activity by Destination' width='192'>
      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
      9tJ5jwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Destinations by ZIP Code Dashboard' width='192'>
      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
      sj4bpa8eJPsAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dream Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dream vs Planned Vacation Dashboard' width='192'>
      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
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Dreamed by ZIP Code' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dreamed vs Planned' width='192'>
      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
      HGtfAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Planned Bar Chart' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Planned by ZIP Code' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAcmUlEQVR4nO3d2VMbeb/f8bcQSCwS+9YCLGGMAAMeJPCAsYfFHm/zDJ55Zp6cPJXk1KlU
      5S9IcplU5SK5y7lPnaTOXSrPyZNTM2M8xjvGxjbYIIwxmN1ilQxGLJIASUjKBRiDGbN4zGL3
      71U1NYx+re6Wqr/T/euPfv1TBIPBIIIgUyH7vQOCsJ9EAQiyJgpAkDVRAIKsiQIQZE0UgCBr
      ogAEWRMFIMiaKABB1kQBCLImCkCQNVEAgqyJAhBkLfTdF8bHx/djPwRhXyjEz6EFOROXQIKs
      bbgEeldn803spHOmNO+DNmCxPMVsLtr28r/+5R8IREnME82PNZXv3UGXrQenNgdJ80G79Ztu
      DM5teO3c4WjRtsdte2mLAggwF9ASyQxBwGGzsbAwwUyIhH+0nVFXKCerq1h41U9/dy9KKZ/y
      wnTaG+tX2/DP86ThBs7IDE4fz2O4s5mOkXnKKiuIXpqk/l4ruvxSCgyJAKQZS/iiqJCH95sJ
      sLR+XZM9PHg6gLG4Agk1KhWMDnYxOGBFrSugNP/Qbn9fwmdm00ugwHQ3wWgjhnAf/c4gjuFu
      hhdjyDckoFCAf2GUprYRbGOTmKsvEj/dz4hHsa4Nnw+DuZIk3yyuuX66ZhO5UG3C0vSYxtvX
      cfv93L15G+/KNsd6W7hy9Sa+iFiUrF9Xd3c3CemHSY5R47IN4fDC8Mg4porz+J2i8y7s3KZn
      gJ7nQ4zPDDAVnEe9+JJMdSzHjhpQuPpwqI/ydVUajc88oAknIhQWl/zEuAfXt2ljSNKqmQlX
      b1i/IiKJs6cvoJh3rlZimrGEIrOJzjsNTLnWr6vgy2rcszYeNrVjil1ePjwmHq1aSbh64/oF
      YSubFkCUIZ8/ZSxfVgwNWdGoUlEBaA4TM3+T1pcpGPUpOIYHuXa1jrS8EqT4ROzP37ap1VoA
      4qVUVNESR2OauVY/TFllBRqPjbs3rhKRms2p4hgA/M4xamvHSc46Rr4mjbE123FNWml9MUp+
      2Wk0vleEqUCTKgEgpabu3rckfLY+ym1Qm82OJIkDUPj0iBxAkDWRAwiyJgpAkDVRAIKs7XoS
      /Cn5nBNP4bftKAmenxjk7uMXGArLSA2do6u3h0B0JhXFObzqb6O110FpdRW+qSHGBgeYUes4
      U5qPYk8+iiDs3I6S4P7ubjTSIXTxGhxjNozl5zgSHObF5CTXb1nw+xzcrm/FNjyC3lRBit+J
      e68+iSB8gB0lwSdNJ1lwOmh89JjchEgiwhRMev2EKZZIyiziwjkTTqebgf6B96a/gnCQ7CgJ
      9syM09w+iNF8CoZbuFN3lbSsLzieKBGhH+Pq1WtkF5WvhmLx0kpyLAgH1AcHYVM2G1pJEge4
      8EkTSbAgayIHEGRNFIAga6IABFnb9C6Q3dJA/dgckf5FMgq+xnwk7vdv0evg19p6Amo1RnMF
      ObqtU9Gdjiv+UP/l586Nr32fD2ye6Ob/+b9uaOv8y3/6yHsn7IYtkmAt1TWVaF+9oPP1Iv6F
      Ke41NBF92ETxoQjuNDxkKSqdM+WZjI750WfEMTo6SkpM6Nuxvok+rDN+xifdlJtyGO54wbFv
      fiAjYjkfttlGmRgYIP14OcOP63GE6qg6UcDkmmQZgOASA4OjHM4yiGRZ+Gi2uARyUl9bS2On
      ncS4KB7X38Lh8fPkxm1mFEEghOnuh3TPaBkbeUHQ/ZLxGfX6sb4uG41dU5R8kQPA3IKC6Ii3
      h3B3ywNi8o4T6GnEMu7G0X2XVuvYumQZ5xg//3KTaF2GOPiFj2pbZ4DkxSnuW14SptJSdfoC
      Go8TW+dz0spOcyT2Gq+9CjK1Sm5bpjh+MpO2sTVjfRcGOHrsC1QrpZapj6C5bZiqYyk43X5i
      07MxJERisyooqjiLKVGB2+3g9bpkWcWXyR5GbTMkHU7Y/W9FkI1NzwAaKYontbXUNTyjwFRA
      6YkSLHfqeNA5TFp+HiONt5hSpSNpQMo1EquNJSYETpQe48GNq7T22wnRSOue3ROVYeKIykbd
      9XsshISR+mZMr/kEwe4HXLvbil+dxjF9kKtXr2F3+pGkVHR5pUT7p1gSqYXwEYkgTJA1cRtU
      kDVRAIKsiQIQZE0UgCBrHyUJfvvTaBdtFhsmc/a2d8BusYDZTCrQ9+gmz14vEphf4MvzP6CP
      3XLI8kclxu/Kz4cnwTrFcsJrG2G47TlhUirl1dU4Jwa59msvxi+r0WsWuNfQRGRGIaX58QxZ
      PegNWoasUxxK09BYfw/byDwVZvPy5tSJnK8xoVm08rDrNfP+LgYmlviy6gxR7qHV8ciGiNnV
      v/P1IhcQPtwWBbCcBMdHacjOTeNxfR0OXwQ9N26T9ad8GruU/M3XJ0hShiOZTWhw0a3Ucuas
      mdbHXbxanMJUfYGp1pv0zxUxPuREb1AzPGRjdtxJzslzHH7x9O3mPK+5XluL0uvFfPaPuHu6
      CC5N0/S4G71yaHU8cn9b8+rfgvB7fHASHFyb8HoXWFgKEBkCsQlJhCnDCVfDwuL6tfn9S3hm
      J5nzQqQyiDpMydyCh9XD+M0ZACBo5647jXOnj1Df/JojJW/HI58+8fbvmnNfffQvRZCPTQtA
      I0VRX1tLiEpDWUUFsQGJO3fqUMYe4qtjEtLKcvpcPXeu12GqOkuqFA9AqiSRlKfnXv215Uug
      6BQ8Uc9pfB5DTnY6mUnp3L5ZhyYunTeP1V03hliRQlLEcx52JWA8Iq0bj7xubLIg/A4iCRZk
      TdwGFWRNFIAga6IABFkTBSDI2kcfE2x5asFcZN7BLnjp6x0n22h4s1EsmDHvw4xLB2muXPE0
      6r2xoyR4anWe4HSi3f10jC5y6nQF4e4x6h+0k1FQBkBwycXgqAtDStjb5Nig5mn7S8YmXlNc
      eZagc4KFiQFC0otQqdQQ9NHWWI/NNkJqhZmFqWEamp4RqcuhwnSYzuZ7jC5Gc7qimDAxLlL4
      SHY0Jnh1nuCkOa7f78U/P0p9YzdNTzqpuniRI6lanGO9/HKzFV1G6voxxF4Hk74ELpzJ5WXv
      JMPdLSzG5GFIgOEhG+MdT1DnnOT8yS8AaGnvo/riN/jnxnG/fMz9Xgfzo09o7J7Zg69FkIsd
      JcG68JV5gud6kY6W8odTWcy5FmhvGVsdrK5NM5LscWCb8RBcmxwzQUJSEspwF2qA2HSOGhIA
      FwA+X4BwdRiLcwugCaJQKlHix+Nbwu8L42hpFaeyNLgWRGwhfDw7GhO8mtRGG8mPneTXuls4
      FqHUnEt9XR39didSqkReaTX+qRG+XDOGWKmKR4pXARokSbNmXl8Vh/QS+iIT4803eTqhRNIo
      yJKiuV53G8dCkGhjKbGTFupuPWAR5W5/J4KMHNgkeLC9kc6RWfJKKjiSqt3v3RE+Uwe2AARh
      L4gcQJA1UQCCrIkCEGRt09ugAZeNy9cfoVSrKCz7GkNi+F7t1774+1sDG177D19nASJh/Vxt
      WgAvOgap/P4H4lbuPA53NtMxMk9ZZQU4htfNE9z/9D69Y3Pkl57GEAfN9xpYjD5MRbEB++gr
      BgbG+bKyVMwpJhwom14CzQUUxLy57T7XT9dsIheqTViaHq+fJ3gaJl1w8eIZ+p+18PJxPb0O
      D6NPbtA946XlQQt5x4vFwS8cOJueAYzxITzqneBEZhROtxdYM++vUv12nmAlhIdHgH8Jf0CB
      L6iitOo0WRoPC0FYzC4gIXJvH3EiCNux6RkgIa+UFHcPdXce44/N5WjMa67Vt2Eu+xJ8M9yp
      u4ojvoDsaJh82U7dzUcUlZVhLD3BpOUOtx50glK1Ok5YEA6ajzZPsN1mI1WSNn2PIBw0IgkW
      ZE3kAIKsiQIQZE0UgCBr+5AE2/kff3+Hf/Pv/xUaRYAr//O/oav5zzsYA+zFZnMiSe8+FPed
      scUf4CCN392Ntg9Nug9S28e2L0lwUV48L166KI4fISzxKMDKGOAOMgrLyI5yMqU2IGHD6klA
      5bZi7X/JUlwWh0LHuPnIirG4jOL0MO61dJKUZeJ4bjIqlRrv1DjtL61MvF6i8mwFGjF+RtjE
      viTBqtR8AhM99PXOcfRoIgBNli6qL1xgtsvCa8cQNhfgsjHk8DI6NEbeidOELr7GUFhMSUk5
      lcU5BAkSQggtDx/hxcvwkA2vYxRfQh5nckPpndy9L074PGxaAG+S4IDPzazbu75xJQlefG8S
      fJ4//9u/JSMc0jckwWFEKXyMoyDuN/ZAoVCwtORjcvI1AKGaWOIiwghXL1+CLSwsEAgE6Owd
      pfLcWYyJUbzdu1CSkuIID/+8f7gnfBz7kAQvjwnOMeqQ0nJRxeuRNFBmPkr9tWvEHDUjZZpZ
      fH4D62Ic+njV6vhhSUoFNMSrp3jQPkhBdhp3btwlLjMb1crYYlW8xPLQ4/XzEwvCbxFJsCBr
      IgkWZE3kAIKsiQIQZE0UgCBrHz0JttlsSO/tDK+dR9jOX/6hnigpEqIzqKlc/0TptZ3svepg
      b5ZA/vX51Ia2f1GwnEb/r6bxDW3/rky35TrFOOP9t4Mk2IttdISBgXGOlx/lcf09QnX5nCjI
      oL3xNmML0RRlR/HrzUekGov5ttxI4+oyBoY7m3lmtRGRkL+6fmNJNUWFWu43d+Kdsr5Nf53Q
      VHuFMCmVTJ2O1tZW9IUnOFOke/u0aaNul78aQQ42LYC5gIK81Z8SLCe65TU19DReYdwdwvzd
      m6Qbaugd9VBUqifJIFFS4sNkMvOs/ue3y6RW0OeW+OZiLm1tE6vr722pZ9weT/KhbLyOIWza
      5QIYchkpLilZmXsYQhQKisyFPLr6T2/nKTb+LbG7970IMrH9McEe72qia1VEUHH2NImKeXxK
      FWfOnWSkrZ6e6B9XU1rfmmW8rhFCwuMI+hbx+Nesv6QasymZOw33IX0l/Z1+DeHGNXMPhzC/
      ss71T5sWhN9v+0mwMnI10TWfKKX7wQ3utvajCIX+9ifYQg3kxIM+Xk3dg/Z1y4Qk5SN5Ornd
      1I+U9iYV1uAce0Ltr3WkHi5A8076q8/V03q9jskFkLRw50k3pWufNr3b34wgCyIIE2RN3AYV
      ZE0UgCBrogAEWRMFIMjatuYJ1gAl1TX0tTVQ8VXlSuvaVPfzsBtjWP/j/27Z0Pbf/3XJlu8T
      9sa2Zol8M169b+Xfa1Ndn9NO/b1WknKKMR3RMG6doWd8kuNZMWvG66bv5mcQhA+2rXmCa2tr
      l8foAsz1rKS61cSGwaPHzzh57gKKoWfYvS4eNXZRXPLFO+N1BeFg2vEZIOjz/Waq+0bm0WNE
      q0JoWhmvG1Z3Cy+IR6MLB9KmBaCRoqivrQWW+wD6Q3oUCXqkwbvcblKRfSSX9Ggt9TeukZRT
      TKpKQ3DlR5tvxutKmdni4BcOLJEEC7ImboMKsiYKQJA1UQCCrG3aCXbZbCBJRLrsDLm1ZKZE
      7dV+7YuBac+G17Li1AeuzTLq3NBmTtdueE3Y2jYKIJlnTS8oOlO9zVXasVjAvP3HPR8YB+kg
      FwWwN7bIAZzc+sv/xXT6eyIVPlrv3sbu8iMZTfgnBik8dYq+5maSU9Q0PB0hLjWTQ2FDtLTO
      4Qk7QZJviOcjsyyFxHCpJodf/vE+EQl+og2VHA4f51mfnWC0xB8qzJvvhiDski36AFqqL55k
      pLcfFkZ42usgEAzg8Xgpykvg2YtR5okiKTEVjVKBd3GR7OJiSkqqOVFoYNwN3393iXIdjLgh
      q+grvv3uW7R+Fx3PnuIPBggsekRSLOybLTvByphDlCR7aLWFkx4HKBQoQ5WEJeSy+PwW8blH
      WXC7CSiCeNwLLBHJcOdtmp4PoYuCn3+5zMNxyHin+5CZno43AKGhYnCjsH8+OAiz9bTSalfw
      beXnc/lykK7zRR9gb4gkWJA1kQMIsiYKQJA1UQCCrG0rCd7JTEMumxVPgoGEbfwGevMH6e69
      g9TR/RzaOifmN7TlJ0du+b6Hg44NbeWH43dlP3ehAIZwardZAHa7KIDPuK1rYmFD23YK4NHg
      9Ia2fSmAtUafP+LJ4CR+fzjnqjLpHIvhxOFFmgfCiHQ9Z3jKQ4KhAMPK8n2WBrrH5ohJz8Ws
      cfBz1xSRzkkKa/6OhefXsTo8zPgjMJu2uweC8PFtuw8wML3EHy9d4ny+mkFvNsG5fvpe2MjO
      U9LeNkYgGMTjeVtlMzOzKBRgtb4Ewig98w0/fF2IcyHIUngil2ouUaBP3I3PJAjbtuVvgepr
      a9FE6zAlhPLT5cv4/eFc+A7mJ0O4P6Pmx9BE0jLUuFCgVIZCACCI1+NFERpLuOLddSrwz4xw
      uXaS+RCVOAMI+0oEYWscpOvnz6HtU+gEiwIQZE3kAIKsiQIQZE0UgCBrWwRhPfS5YjFlp0Bg
      jvr7fVRXFv++LXqnsDm1SNtJyvbYh3awhE/XFgXgZnDxNUXZKcz2dNI1tch2Rwa/l9eBzaEW
      BSAcCFsmwUc0Ibx0BZmcDpCbGAoBFzd+ucaiUknS4eOop58zMednwqngX/75a9pu3mDS4+Vw
      4Tk8E23MTkyjM5Ux+vg+86FqSkpy6Gq+zegzN1LRtxzPEo8DF/bPlgWQkpeFtf0ZytB4Qpde
      w2Q/6vzznDNquX+/AXVUKhe+KqLP0obP62R23g8hHqxWG5JKSdmFS0RMtfPq6DlqjFpw9XG0
      9AzmbBcWyzwgCkDYP1t3gsOSCQy3ocnOWf7vpCN4Oq9z+fJPhMZlrV826GfR60cdGbk8jak6
      kgglkJSNv/smtVeuvH3MuiAcACIIW0P0AeRHFIAgayIHEGRNFIAga6IABFnb9DZoYHGahoaH
      BLUZfHUil9d2J5KUsHHBoI+nD+7yyhdDReWXRHyiZSU6wfKzaQG0NLViqr6IcmYct8+L3eZY
      LQBrbx864/L8Xy+aG4g0lnM6yotniU92RjxRAPKzaQEcMSRzu/Zn0nJLKEsGgn46HjcQm1XK
      kN2Owbg8SbYjEMHJ5CggijDvFLX/7y6BUMgoqEI12crg5CL+8CS+K0/kny6/IEI1T7rpHKlL
      L98+IdoI/+fJLFKajipzzh58dEHYog8QbzjGjz9+T/pCHy+mwdpxD3tQR0ZC+PqVBOHNjKnu
      kS505X/ku+//iHu8i+klNZcuXSJfvcQkkHP8NN//6Y/4J6wbnhB9KL9MHPzCntr0DND/tJEX
      I9MsLSk4VQCGY9WkRDhoG5xat1zh4Th++uefCVdHUlZRzPiNnxhdcwa4fPny8hkAuP7oBiMd
      QbLLzhPDJJ0TXiJXnhAdERmxax9UEH7L3gZhrj4sNglz9k6eNLR3RB9AfkQSLMjaJ3rDUhA+
      DlEAgqyJAhBkbQdJ8DHCNjzlbXu8UzacWmlbD8x912j3E9oHHOSVlHM4ZXenATpID4cSne69
      sYMkGF52WjCZdj4nmNdhw6HeXgFYnlowF61swztKl13DNxePMW6fBd5TAC4bPU4tOdLvu7t0
      kJ6QLApgb2w7Cc6e76ClpYXRuSCnc2K5/7QHny+MUxcr6alfMw7Yeo9X7iCOWSeJsVo84cmc
      Tg/SevcaHQuzfHHmB2Y7rjEyGyAkJoPzhQncePgMry+C8rIMWp60MDbh4fy5E6hUyUTOP+by
      tXFOVVdht9yncdJJwOHk1KW/YeDuX5hekjhdGo3dpSWk+TZdU4s4J73U/N1FLL9cwRUSSog2
      k4JYJ20j06RmHqOsQL9X369wwG1aAPGGY/xoKGC0pZ4J3RlKSnyYTGbab/2C2xeCCj+Lc++M
      A9bquFhZhKWtDbPJhOWpBYDiqgtkhw3xqHOYJXR8d6mY1ob7vJpW4lco8EwO4tR+Tclx99sz
      ACpOffMDfs8sDY9bORoVxanzX5Ey9ZzmcTfK2ENcOnkS7MvbICyeM9+YcFksLDiHic47T7VR
      wf2GXhJSU1COzrK4uPH/yIJ87SgJ7rH3U3sPKo16Oh8NEhEdgWJlHHBEfOTyg6F/izJIy+0r
      dCz5KDv/HfbWX/nl8ighMRlk+Hz4A0Eio5YvC5amhqm96eX82TJUixNcvd6EX6kgWsoBbNy9
      coUwT5CqmgJGnJskx5o0JtuvcHUwCn+oDrfbjSIYwL0gCkB465MKwuwWC5jNpG5raRcNV+qZ
      I4B0pIyS3JQt3yE6wfLzSRWAIHxsIgcQZE0UgCBrogAEWdv0LlBrQy3jc8t/F5afx7AmybIO
      DWHQ6xkasqLXG7a3NZcNGxK/M6/aNbvRCRYOtk0LoLiyBkXDfYyVX22YK3hoaBiDXs/w0NAm
      BeClr3ecbONKuygA4YDZ9jzB+Bzcvf0El9+L0XRmXZOrr4FebSVmLDQ4jWimmng94Sbn5FfY
      bQ4y4rxcuddFuG8SXZWJjke3VucVLiswfOSPJAjbt+0+wMJIF70OD8EAeLybh0n+QCSna75b
      vWQaHnZx/sfv+baqGJj8zXmFBWE/bLsAInQ5xOFGoVCyMoR3lSo2ke67v1B3/ykAoRER6345
      qksJ5epff+bGww5geV5h3swrLAj7SARha4g+gPyIAhBkTeQAgqyJAhBkTRSAIGub3oYZHhnm
      UMYhgPcmvt4pK1Nqw4ENt3ZiNzrBn0Pb52zTAnCPDvNaOkSib4TRKSX6dSMJXfT1OJFChrBp
      RQF8zm2fs00LICc3nse903g9w+hyT2Lrs9DSPUZITDp/qJCw2V1Iur3aVUH4+DbtA4TEGfFN
      dTPkCSEzEmZmZlAoFLy0Wvdo9wRhd23RCQ4lVjnNYmgyAD6vh6AilMjwT3QGDEF4hwjC1jhI
      190Hqe1zJgpAkDWRAwiyJgpAkDVRAIKsbZoDvBn3Ozv2gslQPUdSIhkbGyUtLf2DN+iy9VDf
      0otKI1FVVYL6PU+cttlsSJL0wdv5EKJzKT+bFsDc2DguvZ7+8df4gj6OJKQwYlsi3NcLOuP6
      pz1vc/4vl83N8ZoatBMdNFlGqSz+7WKy20UBCLtv0wLISlbQ98pLkAhCFIssjIwQpTfj6GpE
      azBy7a//iD8iAUW0gYzgC1qsYQQD5WhcPfTZXURLRozM8mR2gjSdGXPO+gM6JCSEzqabDE56
      SDpciMEzsbqsgiCDHY/xxWaRk/Ebs9MLwkewaR8gyqBnvvsBwXA9ySFBHo75OZz09i2pWUX8
      4dvvkLR+CouLKSk/T3FOLM+e9hIMBFn0eIAl8ssurDn4ndTX1vKw109ZUSIzs/MoCDJkta5b
      9rW1g3Z7EKM4+IVdtHknOFRiZqCLxCNJHNJH0W/zEvW+ZVUa+pt+xdI7S3p6HAEUhCpDATWR
      EWsHEWuprqnh7KkiwhRBPIteQtSRqJWsWzbRcIyz+dHcbxv8/Z9SEN5DBGFriD6A/IgCEGRN
      5ACCrIkCEGRNFIAga5sWgHVoCIDZsRf0v1qe6mdsbPSdpVwMWacAP+2NN+iwTi2/7F+guf46
      Nxvb8W1rV7zYbFM72vmPbWDas+Ef4fP2QUlwWtrapVwMDTnRJ07j0hZx0rB8377tQQOSqZqi
      4Dw+IGzLXfFitzmQpP277y/u2MjPByXB/ZYGno/MshQSw6WaHAA6WlvotIYRHVNFoSGBhVAN
      h2LVgBpcffx0Y5CIVB0FCV6e9dkJRkucK0jm9pNn+L1BTGcqIein43EDsVmlZCSE78XnF2Tu
      g5LgcTd8/90lynUw4l5e9k0SXLhyBggGFay9v5p8xMyF8kI6nj3FHwwQWPQw0NWBw+MnQADv
      ghdrxz3sQZ04+IU980FJsC4Kfv7lMg/HIeM90XCeFME//3SZK7V3mQMiIpbn9M1MT8cbgNBQ
      JbqcTHB7UShDUQKGY9XkRztoG9zfvoAgHyIIW0P0AeTn/wMLfh7aKf6DXwAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Visitor Home Locations' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
